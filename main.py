import asyncio
import logging
from datetime import datetime, timedelta
from typing import Dict, Set

from aiogram import Bot, Dispatcher, F, Router
from aiogram.types import (
    Message, CallbackQuery, InlineKeyboardMarkup,
    InlineKeyboardButton, FSInputFile
)
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.keyboard import InlineKeyboardBuilder
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
BOT_TOKEN = "8045172167:AAGfNM2GOwD4H5NQp1Zkn5hwyO-QRVfcH7k"


# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserStates(StatesGroup):
    started = State()
    saw_welcome = State()
    saw_menu = State()
    choosing_payment = State()
    paid = State()
    accepted_rules = State()
    completed = State()


# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data: Dict[int, dict] = {}
users_to_remind: Set[int] = set()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)
router = Router()
scheduler = AsyncIOScheduler()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    builder.button(text="–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø ‚úÖ", callback_data="pay_access")
    builder.button(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã ü§ç", url="https://t.me/+5kCM-Acb3a00Y2Yy")
    builder.adjust(1)
    return builder.as_markup()


def get_payment_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø üî•", callback_data="process_payment")
    return builder.as_markup()


def get_rules_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∞–≤–∏–ª"""
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–†–ò–ù–ò–ú–ê–Æ –ü–†–ê–í–ò–õ–ê ‚úÖ", callback_data="accept_rules")
    return builder.as_markup()


def get_channel_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª –∏ –ø–æ–ª–Ω–æ–≥–æ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚û°Ô∏è –í–æ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url="https://t.me/+vrvFmsnEsVxiNTEy")
    builder.button(text="–ü–æ–ª–Ω–æ–µ –º–µ–Ω—é", callback_data="full_menu")
    builder.adjust(1)
    return builder.as_markup()


def get_reminder_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    builder.button(text="–û–ü–õ–ê–¢–ò–¢–¨ –î–û–°–¢–£–ü ‚úÖ", callback_data="pay_access")
    return builder.as_markup()


# --- –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤—è–∑–∫–∏ –∫–∞—Ä—Ç—ã ---
def get_unlink_card_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ùå –û—Ç–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É", callback_data="unlink_card_confirm")
    return builder.as_markup()


# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–≤—è–∑–∫–∏ ---
def get_confirm_unlink_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞, –æ—Ç–≤—è–∑–∞—Ç—å", callback_data="unlink_card_done")
    return builder.as_markup()


# –¢–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
WELCOME_MESSAGE = """–ñ–¥—É —Ç–µ–±—è –≤ –º–æ—ë–º –∑–∞–∫—Ä—ã—Ç–æ–º –∫–ª—É–±–µ <b>¬´–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤¬ª 

–≠—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –º–∞—Å—Ç–µ—Ä—Å–∫–∏—Ö, –≥–æ–Ω—á–∞—Ä–Ω—ã—Ö —Å—Ç—É–¥–∏–π –∏ —à–∫–æ–ª</b> üå∑

–í–Ω—É—Ç—Ä–∏ –∫–∞–Ω–∞–ª–∞ —É–∂–µ –µ—Å—Ç—å:
1. –ü—Ä–æ—Å—Ç—ã–µ –∏ –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π, —Å—Ç—É–¥–∏–µ–π, —à–∫–æ–ª–æ–π –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏
2. –ú–æ—â–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ —Ä–æ—Å—Ç—É –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—é
3. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂ –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
4. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —ç—Ñ–∏—Ä—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–∞–∑–±–æ—Ä–æ–º —Å—Ç—É–¥–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

üìå –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ ‚Äî <b>490‚ÇΩ –≤ –º–µ—Å—è—Ü</b>

–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª ‚Äî –∑–∞–ø–∏—Å–∫–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –º–∞—Å—Ç–µ—Ä—Å–∫–∏—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç 9 –ª–µ—Ç
–ú–∞—Ç–µ—Ä–∏–∞–ª—ã —É–∂–µ –ø–æ–º–æ–≥–ª–∏ –¥–µ—Å—è—Ç–∫–∞–º –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å –∏ –≤—ã–π—Ç–∏ –≤ —Ä–æ—Å—Ç. –¢—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö –∏—Å—Ç–æ—Ä–∏–∏, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <a href="https://t.me/+5kCM-Acb3a00Y2Yy">–û–¢–ó–´–í–´</a>

–ò –ø–æ—Å–ª–µ ‚Äî –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–∞–Ω–∞–ª—É <b>–ø–æ –∫–Ω–æ–ø–∫–µ –û–ü–õ–ê–¢–ò–¢–¨ –î–û–°–¢–£–ü</b> ‚úÖ"""

MENU_MESSAGE = "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é ü§ç"

PAYMENT_MESSAGE = """<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏:</b>
¬∑ 1 –º–µ—Å—è—Ü 490‚ÇΩ
¬∑ 6 –º–µ—Å—è—Ü–µ–≤ 2.490‚ÇΩ <s>(2.990‚ÇΩ)</s>
¬∑ 12 –º–µ—Å—è—Ü–µ–≤ 4.490‚ÇΩ <s>(5.990‚ÇΩ)</s>

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É @tvoiportret_admin –æ–Ω–∏ –ø–æ–º–æ–≥—É—Ç –≤–∞–º ü§ç

<b>–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø üëá</b>"""

RULES_MESSAGE = """–í –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ <b>"–¢–≤–æ—Ä—á–µ—Å–∫–æ–º—É –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤—É"</b> –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –Ω–∏–º–∏:

<b>1. –£–≤–∞–∂–µ–Ω–∏–µ –∏ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å ü§ù</b>
–ú—ã –∑–¥–µ—Å—å —Ä–∞–¥–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –æ–±–º–µ–Ω–∞ –æ–ø—ã—Ç–æ–º –∏ —Ä–æ—Å—Ç–∞. –ë–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è, –Ω–µ–≥–∞—Ç–∏–≤–∞ –∏ "—É—á–∏—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–≤–µ—Ä—Ö—É". –ö–∞–∂–¥–æ–µ –º–Ω–µ–Ω–∏–µ —Ü–µ–Ω–Ω–æ ‚Äî –ø—É—Å—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –±—É–¥–µ—Ç —Ç—ë–ø–ª–æ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π

<b>2. –û–±—â–µ–Ω–∏–µ –ø–æ –¥–µ–ª—É</b>
–ü–∏—à–∏—Ç–µ –≤ —Ç–µ–º—É: –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å—Ç—É–¥–∏—è–º–∏, –∫–æ–º–∞–Ω–¥–æ–π, –ø—Ä–æ–¥–∞–∂–∞–º–∏, –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º –≤ –±–∏–∑–Ω–µ—Å–µ. –ó–¥–µ—Å—å –Ω–µ —Å–ø–∞–º—è—Ç, –Ω–µ —Ä–µ–∫–ª–∞–º–∏—Ä—É—é—Ç –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –∏ –Ω–µ –∫–∏–¥–∞—é—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã

<b>3. –í–æ–ø—Ä–æ—Å—ã ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞</b>
–ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –≤–∞–º –∫–∞–∂—É—Ç—Å—è "–≥–ª—É–ø—ã–º–∏". –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à –≤–æ–ø—Ä–æ—Å ‚Äî —ç—Ç–æ —á–µ–π-—Ç–æ –æ—Ç–≤–µ—Ç

<b>4. –£ –Ω–∞—Å –Ω–µ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ üåÄ</b>
–ú—ã –Ω–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–µ–ª–∏—Ç—å—Å—è ‚Äî –∏–¥–µ—è–º–∏, –ø–æ–¥—Ö–æ–¥–∞–º–∏, —Ñ–∏—à–∫–∞–º–∏. –í–º–µ—Å—Ç–µ –º—ã —Å–∏–ª—å–Ω–µ–µ

<b>5. –£—á–∞—Å—Ç–≤—É–π, –Ω–µ –º–æ–ª—á–∏ üí¨</b>
–¢–∏—à–∏–Ω–∞ –Ω–µ –≤–µ–¥—ë—Ç –∫ —Ä–æ—Å—Ç—É. –ó–Ω–∞–∫–æ–º—å—Å—è, —É—á–∞—Å—Ç–≤—É–π –≤ —ç—Ñ–∏—Ä–∞—Ö, –ø–∏—à–∏, –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π ‚Äî —Ç—ã –∑–¥–µ—Å—å –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å, –∞ —á–∞—Å—Ç—å –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–∞

<b>6. –í—Å—ë, —á—Ç–æ –∑–¥–µ—Å—å ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è –∑–¥–µ—Å—å üíå</b>
–ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç—ã–π. –ü—Ä–æ—à—É –Ω–µ –≤—ã–Ω–æ—Å–∏—Ç—å –∑–∞ –µ–≥–æ –ø—Ä–µ–¥–µ–ª—ã –ª–∏—á–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –º–∞—Ç–µ—Ä–∏–∞–ª—ã –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è –∞–≤—Ç–æ—Ä–∞

<b>7. –ï—Å–ª–∏ –Ω–∞—Ä—É—à–∞–µ—à—å ‚Äî —Å–Ω–∞—á–∞–ª–∞ –º—è–≥–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–º, –ø–æ—Ç–æ–º ‚Äî —É–¥–∞–ª–∏–º</b>"""

ACCESS_MESSAGE = "üé® <b>–¢–≤–æ–π –¥–æ—Å—Ç—É–ø –≤ \"–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤\"</b>"

REMINDER_MESSAGE = """‚è≥ <b>–ü—Ä–æ—à–µ–ª —á–∞—Å —Å —Ç–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞</b>, –∏, –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–µ–±—è –ø—Ä–æ—Å—Ç–æ —á—Ç–æ-—Ç–æ –æ—Ç–≤–ª–µ–∫–ª–æ

–ê –º–æ–∂–µ—Ç, —Ç–µ–±–µ –≤–∞–∂–Ω–æ –ø–æ–Ω—è—Ç—å, –∞ —Å—Ç–æ–∏—Ç –ª–∏ –æ–Ω–æ —Ç–æ–≥–æ?

<b>–í–æ—Ç —á—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å –≤–Ω—É—Ç—Ä–∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ ¬´–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤¬ª:</b>
üîπ –ü—Ä—è–º—ã–µ —ç—Ñ–∏—Ä—ã —Å —Ä–∞–∑–±–æ—Ä–∞–º–∏ —Å—Ç—É–¥–∏–π, –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –∂–∏–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
üîπ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂, –¥–æ–ø—Ä–æ–¥–∞–∂ –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
üîπ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é, –∫–æ–º–∞–Ω–¥–µ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É
üîπ –ì–æ—Ç–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã: —É—á—ë—Ç, —Ñ–∏–Ω–∞–Ω—Å—ã, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
üîπ –ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ —Å —Ç–∞–∫–∏–º–∏ –∂–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —Å—Ç—É–¥–∏–π, –∫–∞–∫ —Ç—ã

–≠—Ç–æ –Ω–µ –º–æ—Ç–∏–≤–∞—Ü–∏—è –Ω–∞ –æ–¥–∏–Ω –≤–µ—á–µ—Ä. –≠—Ç–æ –æ–ø–æ—Ä–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å, –≤–Ω–µ–¥—Ä—è—Ç—å, —Ä–∞—Å—Ç–∏ –∏ –Ω–µ –≤—ã–≥–æ—Ä–∞—Ç—å

<b>–ö–∞–Ω–∞–ª ‚Äî —ç—Ç–æ –º–æ–π –æ–ø—ã—Ç.</b>
–Ø –Ω–∞—á–∏–Ω–∞–ª–∞ —Å –ø–æ–¥–≤–∞–ª–∞ ‚Äî –∞ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è —Å—Ç—É–¥–∏–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö, —Å–∞–º—ã–π –∫—Ä–∞—Å–∏–≤—ã–π –º–∞—Ä–∫–µ—Ç –≤ —Å—Ç—Ä–∞–Ω–µ, –æ–≥—Ä–æ–º–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ

–ï—Å–ª–∏ —Ç–µ–±–µ –≤–∞–∂–Ω–æ —Å–∏—Å—Ç–µ–º–Ω–æ —Ä–∞—Å—Ç–∏ –≤ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–º –±–∏–∑–Ω–µ—Å–µ ‚Äî –∂–¥—É —Ç–µ–±—è –≤–Ω—É—Ç—Ä–∏

<b>–î–æ—Å—Ç—É–ø ‚Äî –≤—Å–µ–≥–æ 490‚ÇΩ –≤ –º–µ—Å—è—Ü</b>

üëâ –ù–∞–∂–∏–º–∞–π ¬´–û–ü–õ–ê–¢–ò–¢–¨ –î–û–°–¢–£–ü¬ª"""


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@router.message(Command("start"))
async def start_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data[user_id] = {
        'start_time': datetime.now(),
        'state': 'started'
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    users_to_remind.add(user_id)

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —á–∞—Å
    scheduler.add_job(
        send_reminder,
        'date',
        run_date=datetime.now() + timedelta(hours=1),
        args=[user_id],
        id=f"reminder_{user_id}",
        replace_existing=True
    )

    await state.set_state(UserStates.started)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫ (–∑–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –Ω–∞ –≤–∞—à —Ñ–∞–π–ª)
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ file_id —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –≤–∏–¥–µ–æ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª
        video_note = FSInputFile("video_note.mp4")  # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É –≤–∏–¥–µ–æ
        await message.answer_video_note(video_note)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
        await message.answer("üé¨ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    await asyncio.sleep(3)
    await message.answer(WELCOME_MESSAGE, parse_mode="HTML", disable_web_page_preview=True)
    await state.set_state(UserStates.saw_welcome)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    await asyncio.sleep(3)
    await message.answer(MENU_MESSAGE, reply_markup=get_menu_keyboard())
    await state.set_state(UserStates.saw_menu)


@router.callback_query(F.data == "pay_access")
async def pay_access_handler(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø'"""
    user_id = callback.from_user.id

    # –£–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    users_to_remind.discard(user_id)

    # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    try:
        scheduler.remove_job(f"reminder_{user_id}")
    except:
        pass

    await callback.message.edit_text(
        PAYMENT_MESSAGE,
        reply_markup=get_payment_keyboard(),
        parse_mode="HTML"
    )
    await state.set_state(UserStates.choosing_payment)
    await callback.answer()


@router.callback_query(F.data == "process_payment")
async def process_payment_handler(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø'"""
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É

    await callback.message.edit_text(
        RULES_MESSAGE,
        reply_markup=get_rules_keyboard(),
        parse_mode="HTML"
    )
    await state.set_state(UserStates.paid)
    await callback.answer("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")


@router.callback_query(F.data == "accept_rules")
async def accept_rules_handler(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–∏–Ω–∏–º–∞—é –ø—Ä–∞–≤–∏–ª–∞'"""
    await callback.message.edit_text(
        ACCESS_MESSAGE,
        reply_markup=get_channel_keyboard(),
        parse_mode="HTML"
    )
    await state.set_state(UserStates.completed)
    await callback.answer("üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ!")


@router.callback_query(F.data == "full_menu")
async def full_menu_handler(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "–ü–æ–ª–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_unlink_card_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "unlink_card_confirm")
async def unlink_card_confirm_handler(callback: CallbackQuery, state: FSMContext):
    text = (
        "\ud83d\udd10 –£–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É?\n\n"
        "–ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.\n"
        "–û–Ω –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –±–µ–∑ –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∏—è\n\n"
        "–ï—Å–ª–∏ –≤—ã –æ—Ç–≤—è–∂–µ—Ç–µ –∫–∞—Ä—Ç—É:\n"
        "‚Äî –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞\n"
        "‚Äî –¥–∞–ª—å—à–µ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –ø—Ä–æ–¥–ª–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    )
    await callback.message.edit_text(
        text,
        reply_markup=get_confirm_unlink_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "unlink_card_done")
async def unlink_card_done_handler(callback: CallbackQuery, state: FSMContext):
    await callback.answer("–ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω–∞", show_alert=True)
    await callback.message.edit_text("–ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω–∞. –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.")


async def send_reminder(user_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ —á–∞—Å"""
    if user_id in users_to_remind:
        try:
            await bot.send_message(
                user_id,
                REMINDER_MESSAGE,
                reply_markup=get_reminder_keyboard(),
                parse_mode="HTML"
            )
            users_to_remind.discard(user_id)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
dp.include_router(router)


async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler.start()

    # –£–¥–∞–ª—è–µ–º webhook –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())